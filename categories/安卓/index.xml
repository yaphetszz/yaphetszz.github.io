<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>安卓 on Y4ph3tS blog</title>
    <link>http://localhost:1313/categories/%E5%AE%89%E5%8D%93/</link>
    <description>Recent content in 安卓 on Y4ph3tS blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 26 Apr 2022 06:14:00 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/%E5%AE%89%E5%8D%93/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一加测试机从环境配置到救砖全攻略</title>
      <link>http://localhost:1313/posts/%E4%B8%80%E5%8A%A0%E6%B5%8B%E8%AF%95%E6%9C%BA%E4%BB%8E%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%88%B0%E6%95%91%E7%A0%96%E5%85%A8%E6%94%BB%E7%95%A5/</link>
      <pubDate>Tue, 26 Apr 2022 06:14:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/%E4%B8%80%E5%8A%A0%E6%B5%8B%E8%AF%95%E6%9C%BA%E4%BB%8E%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%88%B0%E6%95%91%E7%A0%96%E5%85%A8%E6%94%BB%E7%95%A5/</guid>
      <description>&lt;p&gt;&lt;strong&gt;本文所述的一切技术仅供网络安全研究学习之用，请勿用于任何的违法用途，否则由此所产生的一切后果自负！&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;主要是公众号之前因为一些原因导致停更了，加上其他的原因很多东西其实都只沉积在个人笔记里了，刚好这两天入了个一加6T的测试机，配环境的时候也遇到了不少坑，但是在网上好像看文章别人配环境都是一马平川，就顺手把踩坑和解决的过程记录分享一下。&lt;/p&gt;&#xA;&lt;p&gt;首先装一下1+ USB Driver，官方论坛都能找到&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/39658ba5-f584-424a-b9d7-2a1df835d5f3.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;主要是为了让电脑检测到设备，然后安装驱动，官方论坛也有&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/5db877cd-69cc-4810-a60f-a4a7cef6ca1d.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;第一步就已经遇到坑了，如果电脑上有模拟器虚拟机啥的没关干净，存在僵尸进程的时候是无法安装成功的，建议重启后安装，否则就会卡在执行命令。&lt;/p&gt;&#xA;&lt;p&gt;如果这两个包找不到，建议直接去找一个一加万能工具包，正常的工具包测试不带毒，如果是第三方渠道下载的建议扫一扫，不排除被投毒的可能。因为我在下的时候就遇到一个疑似被投毒的工具包，后续如果有时间可能会出一篇分析文章。&lt;/p&gt;&#xA;&lt;p&gt;打开开发者选项，允许USB调试和OEM解锁，然后使用adb命令解锁BootLoader&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/29127671.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用音量键选择解锁后电源键确认，这步忘了拍照了。然后重启进入系统需要重新打开开发者模式并启用USB调试&lt;/p&gt;&#xA;&lt;p&gt;接下来使用高级重启引导加载器，也可以用adb reboot recovery命令进行&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/67ae3422-0a0c-4b8b-b9fd-279763e63154.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在设备管理器里确定驱动情况&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/d0d3d009-e6fa-4a42-af25-585dd8a94c3b.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;准备好TWRP的包，使用fastboot命令进入临时系统&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/20e28879-5124-49ee-a8ad-7e3d847a1840.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;中间好像出了什么奇怪的问题，直接裂开&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/474cf285-7849-42a1-ba54-400d5031c520.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;怀疑是驱动也出了什么问题，似乎是高通的驱动问题？&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/4db22e0c-63a1-41ff-a5d1-147db143c90e.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;于是网上下了个一加万能工具包&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/ea3c3318-d1e4-42f4-b211-3f9467b52f4c.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;下完之后先把能装的驱动都装上，然后重刷一下系统，完成救砖之后降级了一下系统（原来是安卓11）降级到9或者10都可以，一加官方论坛是提供全量包的，可能由于系统版本原因导致无法刷入，降级之后重刷TWRP就成功了，可以改个语言，也可以不改&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/189d25e1-ed2f-45b7-a1a3-854dd367154d.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;进入高级-》Sideload-》滑块&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/16cc15a5-4298-494c-9dac-63a38b848014.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;将完整的twrp包刷入&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/4b8f1348-6e1b-4436-8cde-225382f73007.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;之后重新进入恢复模式，重新进行sideload，刷入magisk&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/b1105f71-7e4f-4703-ba34-c5387500e5b7.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/528ad50a-2b36-43a5-9b38-c2b4f7bea8d8.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;重启后magisk已安装，直接su即可切换到root&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/05594d79-4b71-47e9-977d-7c93fe3cce71.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;完成magisk安装后就已经root完了，现在就是一些基础的环境配置，建议装一下scrcpy这款神器，可以直接电脑操作，特别方便，截止发文的最新下载地址&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Genymobile/scrcpy/releases/tag/v1.23&#34;&gt;https://github.com/Genymobile/scrcpy/releases/tag/v1.23&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/3d95b4f8-5e83-4e16-ab9f-1eca48040c9a.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;接下来安装rirucore，在github获取官方包后用magisk装一下，当然进入recovery模式和之前一样用sideload也可以刷入，下载地址&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/RikkaApps/Riru/releases/&#34;&gt;https://github.com/RikkaApps/Riru/releases/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/b5cb8168-7320-4c77-98d8-44660e722c76.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;重启之后没有出现新的软件图标，在magisk的模块中可以看到已经加载&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/91791d82-2dae-44aa-8443-9dd734c04d25.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;继续安装Edxposed的时候又出问题了，配个环境真就一直踩坑&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/846ccc88-e281-452a-ae1e-614e5bf792e0.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Edxposed检测不到Riru框架了，主要版本太新，还是降版本解决问题，使用25版本的Riru解决问题&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/908c7cca-3d83-4e8e-8a62-ade4b32f90bf.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;重启完就可以看到我们的Edxposed了&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/b97eea39-9564-4c56-af33-5caf20ff5232.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;根据提示安装完整版的Edxposed&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/367af7e1-e3c9-48a7-ad88-bd2379d3243f.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/a1f5f146-7a17-4727-8693-60275c5fa40f.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;之后就是一些常规的环境配置，比如BP的证书导入，由于Android7开始系统更改了信任用户安装的证书的默认行为，应用程序仅信任系统级CA，所以需要对证书进行一定的更改才能使用（其实这个文章也有很多人写过了，我这里就再水一水）&lt;/p&gt;&#xA;&lt;p&gt;建议重新生成BP证书，在Proxy-Options中进行&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/c1cc0521-e630-4ce0-b15f-c5d63f0dfebe.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;对证书进行一波简单操作&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/084b0cdb-4a91-41d3-ab65-61f2a3c9ebd9.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;通过ADB push将证书移到对应的目录下&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/e7b40647-c46b-4bb7-8646-50171fe20f37.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;测试一下访问百度可以正常抓到包，证书安装成功&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/81867ee0-63c7-440a-b88a-187cd07802aa.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;接着再装一些基础环境比如frida等，可以按需进行配置&lt;/p&gt;&#xA;&lt;p&gt;顺便简单写一下frida的环境配置，首先去官网下载对应Python版本的frida包&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/970a489c-b895-4eda-9c0d-08276089e688.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;下载完成后进行安装，一般在运行setup.py的时候会自动下载frida对应的egg，通常来说因为大家都懂的原因下载速度会很慢，只要找到输出的下载目录直接把刚刚下载的egg文件拖进去再重新执行install命令就行&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/e7f01076-c9cf-46b9-9f29-ee0f16e96b59.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>APK重打包与smali修改</title>
      <link>http://localhost:1313/posts/apk%E9%87%8D%E6%89%93%E5%8C%85%E4%B8%8Esmali%E4%BF%AE%E6%94%B9/</link>
      <pubDate>Wed, 08 Apr 2020 09:14:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/apk%E9%87%8D%E6%89%93%E5%8C%85%E4%B8%8Esmali%E4%BF%AE%E6%94%B9/</guid>
      <description>&lt;p&gt;&lt;strong&gt;本文所述的一切技术仅供网络安全研究学习之用，请勿用于任何的违法用途，否则由此所产生的一切后果自负！&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;APK重打包漏洞是安卓应用开发中一个较为常见的安全问题，主要是指攻击者通过反编译（Reverse  Engineering）获取应用的源代码或资源文件，对其进行恶意修改（如嵌入恶意代码或广告模块）后重新打包并发布。这种行为会导致原应用的完整性和安全性被破坏，从而威胁用户和开发者的利益。&lt;/p&gt;&#xA;&lt;p&gt;使用工具查壳&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../imgs/6b355b58-90ca-4303-97fd-8f7e827ebe24.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;未加壳后用apktools进行反编译&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;java -jar apktool_2.9.3.jar d hello_world.apk&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;反编译后定位到主方法的smali&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../imgs/aed333bb-6467-41d6-a0f8-a08625a9b63b.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在smali中插入弹窗代码&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../imgs/da19b082-ace1-408a-a071-8e744fa3de3e.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用apktool重新编译&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;java -jar apktool.jar b hello_world -o unsigned.apk&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;../imgs/25c573f7-c474-4b8e-aca7-0a4b9b93baef.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;此时如果直接安装是无法成功的，因为APP未经过签名&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../imgs/c3351e21-959e-40bd-9c41-183ffaec352f.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用命令进行签名，签名先需要先生成jks证书文件&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;keytool -genkeypair -v -keystore test.jks -storepass 123456 -keyalg RSA -keysize 2048 -validity 10000 -alias test&#xD;&#xA;&amp;#34;C:\Program Files\Java\jdk1.8\bin\java.exe&amp;#34; -jar apksigner.jar sign -verbose --ks test.jks --v1-signing-enabled true --v2-signing-enabled true --ks-pass pass:123456 --ks-k ey-alias test --out signed.apk unsigned.apk&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;../imgs/5c4b5c06-cc90-4afe-b60a-66a9d9a13deb.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;重打包后可以看到之前修改smali弹窗已经成功&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../imgs/ada17813-2a42-4020-a22e-13eac976a046.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;常见问题解决：&lt;/p&gt;&#xA;&lt;p&gt;\1. Failed to load signer &amp;ldquo;signer #1&amp;rdquo; java.io.IOException: Keystore was tampered with, or password was incorrect&lt;/p&gt;</description>
    </item>
    <item>
      <title>Janus漏洞复现</title>
      <link>http://localhost:1313/posts/janus%E6%BC%8F%E6%B4%9E/</link>
      <pubDate>Fri, 14 Sep 2018 04:32:27 +0800</pubDate>
      <guid>http://localhost:1313/posts/janus%E6%BC%8F%E6%B4%9E/</guid>
      <description>&lt;p&gt;&lt;strong&gt;本文所述的一切技术仅供网络安全研究学习之用，请勿用于任何的违法用途，否则由此所产生的一切后果自负！&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Android平台被爆出“核弹级”漏洞Janus（CVE-2017-13156），该漏洞允许攻击者任意修改Android应用中的代码，而不会影响其签名。 众所周知，Android具有签名机制。正常情况下，开发者发布了一个应用，该应用一定需要开发者使用他的私钥对其进行签名。恶意攻击者如果尝试修改了这个应用中的任何一个文件（包括代码和资源等），那么他就必须对APK进行重新签名，否则修改过的应用是无法安装到任何Android设备上的。但如果恶意攻击者用另一把私钥对APK签了名，并将这个修改过的APK对用户手机里的已有应用升级时，就会出现签名不一致的情况。因此，在正常情况下，Android的签名机制起到了防篡改的作用。&lt;/p&gt;&#xA;&lt;p&gt;但如果恶意攻击者利用Janus漏洞，那么恶意攻击者就可以任意地修改一个APK中的代码（包括系统的内置应用），同时却不需要对APK进行重新签名。换句话说，用这种方式修改过的APK，Android系统会认为它的签名和官方的签名是一致的，但在这个APK运行时，执行的却是恶意攻击者的代码。恶意攻击者利用这个修改过的APK，就可以用来覆盖安装原官方应用（包括系统的内置应用）。由此可见，该漏洞危害极大，而且影响的不仅是手机，而是所有使用Android操作系统的设备。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/b85e2cb5-e399-4d24-b35b-13fc0d299c73.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;主要问题是没有使用V2签名&#xA;使用getapkinfo查看应用信息，未使用V2签名&#xA;&lt;img src=&#34;../index_files/617873ce-0216-4a53-a57c-65a1019a7fad.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;为了避免误报问题，解压安装包后查看签名.SF文件，可以看到没有加V2签名&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/47d5e25b-76e4-4167-ab4c-6832cc37a74e.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用一款已经添加了V2签名的APP来查看可以看到X-Android-APK-Signed: 2字段&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/5d285604-ed4d-4835-bd9c-506a652e467a.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;提取出文件中的dex，并进行反编译，此处采用baksmali&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;java -jar baksmali-2.5.2.jar d classes.dex&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../index_files/64a1631e-e126-4d69-8c50-de2063bb64d4.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;进入默认输出文件夹，可以看到已经反编译出了smali文件&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/f86e352b-587d-4aea-aa5f-a84eca1a572b.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用命令&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find . -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\*.smali&amp;#34;&lt;/span&gt; | xargs grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;const&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../index_files/df8d5baf-b406-4331-ae5f-cb871f725977.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;可以看到在Utils.smali文件中大量信息&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/274ca1c7-2a8e-45a4-87b8-2f900490a26d.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;选择其中的域名信息，&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/26ce6960-e553-412e-8946-b14ddd2c1f93.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;修改为evil.com&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/cf2a01e2-95ae-4b6b-9931-e36936365dbd.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;修改后保存，重打包成为新的dex，重新生成的文件为out.dex&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/cbffbcf5-4418-450c-b27c-88f79edee3ab.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用利用工具生成恶意的APK包&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/28fcce24-8a3a-4d75-bbc7-e1ca1e9c7cd0.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;通过工具对比可见两个文件的签名文件校验结果完全一致&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../index_files/7d3df106-ed8c-4f40-b137-0a708b2a9aec.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
